// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(BdTeacompanioContext))]
    partial class BdTeacompanioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Data.Models.Estudiosmedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int>("IdHijo")
                        .HasColumnType("integer")
                        .HasColumnName("id_hijo");

                    b.Property<int>("IdHijoNavigationId")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoestudio")
                        .HasColumnType("integer")
                        .HasColumnName("id_tipoestudio");

                    b.HasKey("Id")
                        .HasName("estudiosmedicos_pkey");

                    b.HasIndex("IdHijoNavigationId");

                    b.HasIndex("IdTipoestudio");

                    b.ToTable("estudiosmedicos", (string)null);
                });

            modelBuilder.Entity("server.Data.Models.Hijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("DescripcionDiagnostico")
                        .HasColumnType("text")
                        .HasColumnName("descripcion_diagnostico");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<int?>("IdUsuarioNavigationId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreDiagnostico")
                        .HasMaxLength(150)
                        .HasColumnType("character(150)")
                        .HasColumnName("nombre_diagnostico")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("pariente_pkey");

                    b.HasIndex("IdUsuarioNavigationId");

                    b.ToTable("hijo", (string)null);
                });

            modelBuilder.Entity("server.Data.Models.Tipoestudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("tipoestudio_pkey");

                    b.ToTable("tipoestudio", (string)null);
                });

            modelBuilder.Entity("server.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("correo");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Imagen")
                        .HasMaxLength(150)
                        .HasColumnType("character(150)")
                        .HasColumnName("imagen")
                        .IsFixedLength();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("usuario_pkey");

                    b.HasIndex(new[] { "Correo" }, "usuario_correo_key")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("server.Data.Models.Estudiosmedico", b =>
                {
                    b.HasOne("server.Data.Models.Hijo", "IdHijoNavigation")
                        .WithMany("Estudiosmedicos")
                        .HasForeignKey("IdHijoNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Data.Models.Tipoestudio", "IdTipoestudioNavigation")
                        .WithMany("Estudiosmedicos")
                        .HasForeignKey("IdTipoestudio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tipoestudio_estudiosmedicos");

                    b.Navigation("IdHijoNavigation");

                    b.Navigation("IdTipoestudioNavigation");
                });

            modelBuilder.Entity("server.Data.Models.Hijo", b =>
                {
                    b.HasOne("server.Data.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Hijos")
                        .HasForeignKey("IdUsuarioNavigationId");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("server.Data.Models.Hijo", b =>
                {
                    b.Navigation("Estudiosmedicos");
                });

            modelBuilder.Entity("server.Data.Models.Tipoestudio", b =>
                {
                    b.Navigation("Estudiosmedicos");
                });

            modelBuilder.Entity("server.Data.Models.Usuario", b =>
                {
                    b.Navigation("Hijos");
                });
#pragma warning restore 612, 618
        }
    }
}
